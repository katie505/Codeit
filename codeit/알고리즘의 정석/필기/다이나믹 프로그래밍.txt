<다이나믹 프로그래밍>
- 문제를 각각의 작은 문제로 나누어 해결한 결과를 저장해뒀다가 나중에 큰 문제의 결과와 합하여 풀이하는 알고리즘
- 문제의 최적 해결 방법이 부분 문제에 대한 최적 해결 방법으로 구성되는 경우의 문제, 즉 '최적 부분 구조'를 갖고 있는 문제를 풀이할 수 있음
- 중복된 하위 문제들의 결과를 저장해뒀다가 풀이해 나감
*중복되지 않는 문제들은 다이나믹 프로그래밍으로 풀지 않음
- 0-1 배낭 문제, 피보나치 수열, 다익스트라 알고리즘

다이나믹 프로그래밍 방법론
- 방식에 따라 크게 상향식과 하향식으로 나뉨
- 상향식을 '타뷸레이션', 하향식을 '메모이제이션'
1) 상향식(Bottom-Up) : 더 작은 하위 문제부터 살펴본 다음, 작은 문제의 정답을 이용해 큰 문제의 정답을 풀어나감. 타뷸레이션이라 부르며, 일반적으로 이 방식만을 다이나믹 프로그래밍으로 지칭하기도 함
2) 하향식(Top-Down) : 하위 문제에 대한 정답을 계산했는지 확인해가며 문제를 자연스러운 방식으로 풀어나감

- 대부분의 다이나믹 프로그래밍 문제는 어렵기 때문에, 대면 인터뷰 시에는 다양한 문제를 출제하기가 쉽지 않고 결국 기본에 가장 충실한 문제를 낼 수밖에 없음
- 피보나치 수열은 그중에서도 다이나믹 프로그래밍의 가장 기본 중의 기본이라 할 수 있는 문제
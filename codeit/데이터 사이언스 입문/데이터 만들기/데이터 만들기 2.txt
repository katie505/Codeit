웹 페이지 스타일링 원리
1) 데이터 추출의 원리
- 데이터를 골라내는 작업은 웹 페이지를 꾸미는 스타일링 원리와 밀접한 연관이 있음
- CSS 선택자는 추출할 데이터의 위치를 지정할 때도 활용할 수 있고 웹 페에지의 원리를 역이용하는 것

2) CSS로 HTML 꾸미기
- CSS : 웹 페이지 꾸밀 때 사용하는 언어
- CSS 코드는 크게 'HTML 태그를 선택하는 코드'와 '스타일을 지정하는 코드'로 나뉨
- li : HTML 태그를 선택하는 코드
- CSS 선택자 : 스타일 적용의 범위를 정하는 코드
- 나머지는 스타일을 지정하는 코드

<CSS 선택자>
첫 번째 CSS 선택자 : 태그 이름
- CSS 선택자로 '태그의 이름'을 쓰면 그 태그 모두에 스타일이 입혀짐
EX) p { 
	color: blue;
	font-size: 20px;
      }
= 모든 <p> 태그에 스타일이 적용됨

두 번째 CSS 선택자 : 아이디(id)
- 모든 태그가 아닌, 단 하나의 태그에만 스타일을 입히고 싶을 때 'id'라는 속성을 사용하면 됨
- 아이디를 상징하는 기호 '#'
EX) #green-tea{ ~ } : 아이디가 green-tea인 태그에만 스타일 입히기
- 동일한 아이디를 여러 태그가 가질 수 없음
- 하나의 아이디는 HTML 코드 전체에 단 한번만 나와야 함

세 번째 CSS 선택자 : 클래스(class)
- 여러 태그에 동시에 스타일을 입힐 때
- 클래스를 상징하는 기호 '.'
EX) .favorite{ ~ } : 클래스가 favorite인 모든 태그 선택 

*하나의 태그는 아이디를 한 개만 가질 수 있지만 클래스는 여러 개를 가질 수 있음
- 클래스 이름 사이에 공백을 추가하면 됨
EX) <p class = 'favorite preview'> ~ : <p> 태그에 favorite, preview 두 개의 클래스 모두 부여

네 번째 CSS 선택자 : 속성(attribute)
- 아이디와 클래스도 속성 중 하나
EX) <img> 태그에서 흔히 쓰는 alt 속성 : 이미지가 로딩되지 않을 경우를 대비해서, 이 이미지가 어떤 이미지인지 텍스트로 알려주는 역할
- 속성 이름과 속성값을 CSS 선택자로 활용
EX) [속성 이름 = '속성 값'] { ~ }

* 여러 CSS 선택자를 조합해서 사용할 수도 있음
1) OR 연산
- 쉼표(,)
- 두 CSS 선택자 중 하나라도 해당되면 선택
EX) .two, .four {
  	color: red;
	}
= class 이름이 'two'이거나 'four'인 태그의 색상을 빨간색으로 지정

2) AND 연산
- 두 CSS 선택자를 붙여쓰면, 두 조건에 모두 해당되는 요소만 선택(순서 상관 없음)
EX) .favorite.private {
  	color: red;
	}

3) 중첩된 요소
- HTML 태그 안에 또 다른 HTML 태그가 있을 때
- 일반적인 웹 페이지의 HTML 태그는 많이 중첩되어 있기 때문에, 중첩에 대한 조건을 추가하는 경우가 많음
EX) 
<i>디저트</i>
<p>
  <i>다쿠아즈</i>
  <i>마카롱</i>
  <i>케이크</i>
</p>
- <i> 태그는 텍스트를 기울이는 이탤릭 효과
- 모든 <i> 태그가 아닌, <p> 태그 안에 중첩된 <i> 태그만 추출
- '띄어쓰기'로 중첩 표현
p i {
  color: red;
}
 = <p> 태그 안에 중첩된 <i> 태그

<파싱(Parsing)>
- 문자의 구조를 분석해서 원하는 정보를 얻어내는 것
- 복잡한 HTML 코드에서 정보를 뽑아내는 것도 파싱의 일종
- 파이썬에서는 'Beautiful Soup'이라는 툴로 HTML 파싱

1. Beautiful Soup 타입 만들기
- HTML 코드를 파싱하려면, 먼저 HTML 코드를 'Beautiful Soup 타입'으로 바꿔줘야 함
- 'bs4' 라이브러리의 'BeatufilSoup' 불러오기

2. 특정 태그 선택하기
- BeautifulSoup 타입에는 .select() 메소드 쓸 수 있음 
= 괄호 안에 CSS 선택자를 넣으면 특정 HTML 태그만 선택할 수 잇음

3. 태그에서 문자열 추출하기
- .select()로 가져온 태그는 BeautifulSoup 태그 type
- BeautifulSoup 태그의 기능 중 텍스트 추출 = .text



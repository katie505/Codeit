<자료 구조>
- 데이터를 저장하고 관리하기 위해 사용하는 구조
- 데이터의 효율적인 접근 및 조작을 가능하게 해주는 저장 및 관리 방식
- 목적 : 자료를 어떻게 구조화할지 고민해서 데이터를 효율적으로 사용하기 위해

<컴퓨터가 데이터를 저장하는 법>
데이터가 저장되는 곳
1) 스토리지(storage)
- 데이터(사진, 영화, 노래, 워드 문서등)가 영구적으로 저장되는 곳
- 스토리지에 저장된 데이터들은 사용자가 직접 지우거나 컴퓨터에 심각한 외부 충격이 있지 않는 이상 사라지지 않음
- 데이터를 저장하고 받아오는 데 오래 걸림
- 지금 당장 사용할 것이 아닌 정확히 언제 사용할 지 모르겠는 파일 저장

2) 메모리(memory)
- 데이터가 임시로 저장되는 곳
- 스토리지보다 용량이 작음
- 데이터를 저장하고 받아오는 데 빠름
- 일정한 칸으로 나눠져 있다
- 각 칸에 데이터를 저장할 수 있다
- 각 칸은 자신만의 주소가 있다.

RAM : Random Access Memory
- 임의 접근 메모리
- 임의 접근 : 저장 위치를 알면 접근할 때 항상 일정한 시간이 걸림. 
- 메모리에 저장한 데이터 접근 시간 복잡도 : O(1)

byte
- 메모리 한 칸이 저장할 수 있는 가장 기본적인 용량의 단위
- 대부분의 현대 컴퓨터 시스템들은 메모리 한 칸에 바이트만큼의 데이터 저장
- kB = 1,000 byte / MB = 1,000,000 byte / GB = 1,000,000,000 byte

레퍼런스(reference)
- 주소와는 다른 개념. 주소는 메모리에 실질적인 주소
- 데이터에 접근할 수 있게 해주는 값
- 주소보다 조금 더 포괄적인 표현
- 자료 구조를 배울 때는 '주소 = 레퍼런스'라고 생각해도 됨
- 실제로 변수를 사용할 때는 파이썬이 저장된 값을 알아서 받아옴 = 파이썬이 메모리에 있는 값을 가져옴

데이터의 주소
- 파이썬 id 함수 : 저장한 데이터의 메모리 주소를 정수로 표현한 값을 알아낼 수 있음
* 주석 처리돼 있는 부분은 코드를 돌릴 때마다 다르게 나옴
- 같은 주소에 저장돼 있는 데이터 = 똑같은 데이터
* Aliasing : 여러 변수가 같은 메모리를 가리키는 것